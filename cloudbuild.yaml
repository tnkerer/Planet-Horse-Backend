# cloudbuild.yaml

# 1. Build the Docker image and push to Artifact Registry
steps:
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "us-central1-docker.pkg.dev/planethorse/planet-horse-repo/planet-horse-backend:$SHORT_SHA",
        "."
      ]

  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "us-central1-docker.pkg.dev/planethorse/planet-horse-repo/planet-horse-backend:$SHORT_SHA"
      ]

  # 2. Deploy to Cloud Run, pulling secrets at build time
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk:slim"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        # Fetch each secret into an environment variable
        export SITE_DOMAIN=$(gcloud secrets versions access latest --secret=SITE_DOMAIN)
        export SITE_URL=$(gcloud secrets versions access latest --secret=SITE_URL)
        export JWT_SECRET=$(gcloud secrets versions access latest --secret=JWT_SECRET)
        export NODE_ENV=$(gcloud secrets versions access latest --secret=NODE_ENV)
        export SQL_PWD=$(gcloud secrets versions access latest --secret=SQL_PWD)

        # Deploy (or update) the Cloud Run service
        gcloud run deploy planet-horse-backend \
          --image=us-central1-docker.pkg.dev/planethorse/planet-horse-repo/planet-horse-backend:$SHORT_SHA \
          --region=southamerica-east1 \
          --platform=managed \
          --allow-unauthenticated \
          --set-env-vars=\
JWT_SECRET=${JWT_SECRET},\
SITE_DOMAIN=${SITE_DOMAIN},\
SITE_URL=${SITE_URL},\
NODE_ENV=${NODE_ENV},\
PORT=8080,\
DATABASE_URL=postgresql://sa_app:${SQL_PWD}@/planethorse?host=/cloudsql/planethorse:southamerica-east1:planet-horse-db \
          --add-cloudsql-instances=planethorse:southamerica-east1:planet-horse-db

# 3. Let Cloud Build know which image was built
images:
  - "us-central1-docker.pkg.dev/planethorse/planet-horse-repo/planet-horse-backend:$SHORT_SHA"
