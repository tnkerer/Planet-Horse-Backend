// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  wallet        String    @unique
  name          String?
  horses        Horse[]
  items         Item[]
  transactions  Transaction[]
  chests        Chest[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime? @updatedAt
  phorse        Float @default(0)
  medals        Int @default(0)
}

model Nonce {
  id        Int      @id @default(autoincrement())
  address   String
  nonce     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model Horse {
  id              String @id @default(uuid())
  tokenId         String @unique
  owner           User @relation(fields: [ownerId], references: [id])
  ownerId         String
  name            String
  sex             Sex
  status          Status
  rarity          String
  exp             Int
  upgradable      Boolean
  level		        Int
  basePower       Int
  currentPower    Int
  baseSprint      Int
  currentSprint   Int
  baseSpeed       Int
  currentSpeed    Int
  currentEnergy   Int
  maxEnergy       Int
  equipments      Item[]
  lastRace  DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  @@index([ownerId])
}

model Item {
  id              String @id @default(uuid())
  owner           User @relation(fields: [ownerId], references: [id])
  ownerId         String
  equipedBy       Horse? @relation(fields: [horseId], references: [id])
  horseId         String?
  name            String
  value           Int
  breakable       Boolean
  uses            Int?
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model Transaction {
  id              String @id @default(uuid())
  owner           User @relation(fields: [ownerId], references: [id])
  ownerId         String
  type            TransactionType
  status          TransactionStatus
  value           Float
  note            String?
  txId            String?
  createdAt DateTime  @default(now())
}

model Chest {
    id              String @id @default(uuid())
    owner           User @relation(fields: [ownerId], references: [id])
    ownerId         String
    chestType       Int
    quantity        Int
    @@unique([ownerId, chestType])
}

enum Status {
  SLEEP
  IDLE
  BRUISED
}

enum TransactionType {
  DEPOSIT
  WITHDRAW
  ITEM
}

enum TransactionStatus {
  FAILED
  PENDING
  COMPLETED
}

enum Sex {
  MALE
  FEMALE
}

